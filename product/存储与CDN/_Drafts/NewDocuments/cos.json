{
  "openapi": "3.0.0",
  "info": {
    "description": "对象存储服务（Cloud Object Storage）是面向企业和个人开发者提供的高可用，高稳定，强安全的云端存储服务。您可以将任意数量和形式的非结构化数据放入COS，并在其中实现数据的管理和处理。COS支持标准的Restful API接口，您可以快速上手使用，按实际使用量计费，无最低使用限制。",
    "version": "1.0.0",
    "title": "腾讯云对象存储COS API文档",
    "termsOfService": "http://qcloud.com/product/cos"
  },
  "tags": [
    {
      "name": "object",
      "description": "Object操作",
      "externalDocs": {
        "description": "了解更多关于对象存储object",
        "url": "https://cloud.tencent.com/document/product/436"
      }
    },
    {
      "name": "bucket",
      "description": "bucket操作",
      "externalDocs": {
        "description": "了解更多关于对象存储bucket",
        "url": "https://cloud.tencent.com/document/product/436"
      }
    }
  ],
  "servers": [
    {
      "url": "http://{bucket}.cos.{region}.myqcloud.com",
      "description": "由bucket以及地域信息region组成请求的地址",
      "variables": {
        "region": {
          "enum": [
            "ap-beijing-1",
            "ap-beijing",
            "ap-shanghai",
            "ap-guangzhou",
            "ap-chengdu",
            "ap-singapore",
            "ap-hongkong",
            "na-toronto",
            "eu-frankfurt"
          ],
          "default": "ap-shanghai",
          "description": "对象存储可用地域信息"
        },
        "bucket": {
          "default": "demo",
          "description": "对象存储存储桶名称"
        }
      }
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "bucket"
        ],
        "summary": "Get Bucket",
        "description": "Get Bucket 请求等同于 List Object 请求，可以列出该 Bucket 下的部分或者全部 Object。此 API 调用者需要对 Bucket 有 Read 权限。",
        "operationId": "GetBucket",
        "parameters": [
          {
            "in": "query",
            "name": "prefix",
            "description": "前缀匹配，用来规定返回的文件前缀地址",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Prefix"
            }
          },
          {
            "in": "query",
            "name": "delimiter",
            "description": "定界符为一个符号，如果有 Prefix，则将 Prefix 到 delimiter 之间的相同路径归为一类，定义为 Common Prefix，然后列出所有 Common Prefix。如果没有 Prefix，则从路径起点开始",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Delimiter"
            }
          },
          {
            "in": "query",
            "name": "encoding-type",
            "description": "规定返回值的编码方式，可选值：url",
            "required": false,
            "schema": {
              "type": "string",
              "example": "EncodingType"
            }
          },
          {
            "in": "query",
            "name": "marker",
            "description": "默认以 UTF-8 二进制顺序列出条目，所有列出条目从marker开始",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Marker"
            }
          },
          {
            "in": "query",
            "name": "max-keys",
            "description": "单次返回最大的条目数量，默认1000",
            "required": false,
            "schema": {
              "type": "string",
              "example": "MaxKeys"
            }
          }
        ],
        "responses": {
          "200": {
            "error_code" : "None",
            "description": "查询成功，返回 application/xml 数据，包含bucket中的对象信息",
            "headers": {
              "x-cos-request-id": {
                "description": "全局唯一的请求标识号",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#components/schemas/ListBucketResult"
                }
              }
            }
          },
          "400": {
            "error_code" : "InvalidBucketName",
            "description": "Bucket名称不合法",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                  "description": "错误码用来定位唯一的错误条件，用来确定错误场景，具体错误码见下文"
                }
              }
            }
          },
          "403": {
            "error_code" : "SignatureDoesNotMatch",
            "description": "提供的签名不符合规则，返回该错误码",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                  "description": "错误码用来定位唯一的错误条件，用来确定错误场景，具体错误码见下文"
                }
              }
            }
          },
          "404": {
            "error_code" : "NoSuchBucket",
            "description": "Bucket 不存在，返回该错误码",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
      }, 
      "put": {
        "tags": [
          "bucket"
        ],
        "summary": "Put Bucket",
        "description": "Put Bucket 接口请求可以在指定账号下创建一个 Bucket。该 API 接口不支持匿名请求，您需要使用帯 Authorization 签名认证的请求才能创建新的 Bucket 。创建 Bucket 的用户默认成为 Bucket 的持有者。",
        "operationId": "PutBucket",
        "parameters": [
          {
            "in": "header",
            "name": "x-cos-acl",
            "description": "定义 Object 的 ACL 属性。有效值：private，public-read-write，public-read；默认值：private",
            "required": false,
            "schema": {
              "type": "string",
              "example": "public-read-write"
            }
          },
          {
            "in": "header",
            "name": "x-cos-grant-read",
            "description": "赋予被授权者读的权限。格式：x-cos-grant-read: id=\" \",id=\" \"；<br>当需要给子账户授权时，id=\"qcs::cam::uin/\\<OwnerUin>:uin/<SubUin>\"，<br>当需要给根账户授权时，id=\"qcs::cam::uin/\\<OwnerUin>:uin/\\<OwnerUin>\"",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id=\"qcs::cam::uin/\\<OwnerUin>:uin/<SubUin>\""
            }
          },
          {
            "in": "header",
            "name": "x-cos-grant-write",
            "description": "赋予被授权者读的权限。格式：x-cos-grant-write: id=\" \",id=\" \"；<br>当需要给子账户授权时，id=\"qcs::cam::uin/\\<OwnerUin>:uin/<SubUin>\"，<br>当需要给根账户授权时，id=\"qcs::cam::uin/\\<OwnerUin>:uin/\\<OwnerUin>\"",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id=\"qcs::cam::uin/\\<OwnerUin>:uin/<SubUin>\""
            }
          },
          {
            "in": "header",
            "name": "x-cos-grant-full-control",
            "description": "赋予被授权者读的权限。格式：x-cos-grant-full-control: id=\" \",id=\" \"；<br>当需要给子账户授权时，id=\"qcs::cam::uin/\\<OwnerUin>:uin/<SubUin>\"，<br>当需要给根账户授权时，id=\"qcs::cam::uin/\\<OwnerUin>:uin/\\<OwnerUin>\"",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id=\"qcs::cam::uin/\\<OwnerUin>:uin/<SubUin>\""
            }
          },
        ],
        "responses": {
          "200": {
            "error_code" : "None",
            "description": "新建Bucket成功，返回 application/xml 数据，包含bucket中的对象信息",
            "headers": {
              "x-cos-request-id": {
                "description": "全局唯一的请求标识号",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400-0": {
            "error_code" : "TooManyBucket",
            "description": "bucket数量超过200限制",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                  "description": "错误码用来定位唯一的错误条件，用来确定错误场景，具体错误码见下文"
                }
              }
            }
          },
          "400-1": {
            "error_code" : "InvalidBucketName",
            "description": "Bucket名称不合法",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                  "description": "错误码用来定位唯一的错误条件，用来确定错误场景，具体错误码见下文"
                }
              }
            }
          },
          "404": {
            "error_code" : "InvalidBucketName",
            "description": "Bucket 不存在，返回该错误码",
            "content": {
              "application-xml": {
                "schema": {
                  "oneOf": [
                    {
                      "description" : "ddd",
                      "type": "string"
                    },
                    {
                      "description" : "eee",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "error_code" : "BucketAlreadyExists",
            "description": "CreateBucket指定的BucketName已经使用，请选择新的BucketName",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                  "description": "错误码用来定位唯一的错误条件，用来确定错误场景，具体错误码见下文"
                }
              }
            }
          },
        },
      }
    },
    "/?cors": {
      "put": {
        "tags": [
          "bucket"
        ],
        "summary": "Put Bucket CORS",
        "description": "Put Bucket CORS 接口用来请求设置 Bucket 的跨域资源共享权限，您可以通过传入 XML 格式的配置文件来实现配置，文件大小限制为64 KB。默认情况下，Bucket 的持有者直接有权限使用该 API 接口，Bucket 持有者也可以将权限授予其他用户。",
        "operationId": "PutBucketCORS",
        "requestBody": {
          "description": "请求的请求体为跨域规则",
          "required": true,
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BucketCorsRequest",
                "description": "设置的具体跨域规则"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Content-MD5",
            "description": "RFC 1864 中定义的 128位 内容 MD5 算法校验值，用以验证请求体在传输过程中是否有损坏",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "error_code" : "None",
            "description": "上传成功,响应体返回为空"
          },
          "403": {
            "error_code" : "SignatureDoesNotMatch",
            "description": "提供的签名不符合规则，返回该错误码",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                  "description": "错误码用来定位唯一的错误条件，用来确定错误场景，具体错误码见下文"
                }
              }
            }
          },
          "404": {
            "error_code" : "NoSuchBucket",
            "description": "如果试图添加的规则所在的 Bucket 不存在，返回该错误码",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "Demo": 
        "```xml\n
        PUT /?lifecycle HTTP/1.1\n
        Host:lifecycletest-73196696.cos.ap-beijing.myqcloud.com\n
        Date: Wed, 16 Aug 2017 11:59:33 GMT\n
        Authorization:q-sign-algorithm=sha1&q-ak=AKIDZfbOAo7cllgPvF9cXFrJD0a1ICvR98JM&q-sign-time=1502855771;1502935771&q-key-time=1502855771;1502935771&q-header-list=content-md5;host&q-url-param-list=lifecycle&q-signature=f3aa2c708cfd8d4d36d658de56973c9cf1c24654\n
        Content-MD5: LcNUuow8OSZMrEDnvndw1Q==\n
        Content-Length: 348\n
        Content-Type: application/x-www-form-urlencoded\n\n
        <LifecycleConfiguration>\n
          <Rule>\n
            <ID>id1</ID>\n
            <Filter><br>\n
               <Prefix>documents/</Prefix>\n
            </Filter>\n
            <Status>Enabled</Status>\n
            <Transition>\n
              <Days>100</Days>\n
              <StorageClass>NEARLINE</StorageClass>\n
            </Transition>\n
          </Rule>\n
          <Rule>\n
            <ID>id2</ID>\n
            <Filter>\n
               <Prefix>logs/</Prefix>\n
            </Filter>\n
            <Status>Enabled</Status>\n
            <Expiration>\n
              <Days>10</Days>\n
            </Expiration>\n
          </Rule>\n
        </LifecycleConfiguration>\n
        ```"
      }
    },
    "/{ObjectName}": {
      "parameters": [
        {
          "name": "ObjectName",
          "in": "path",
          "description": "COS 中存储的具体文件，是存储的基本实体",
          "required": true,
          "schema": {
            "type": "string"
          },
          "style": "simple"
        }
      ],
      "put": {
        "tags": [
          "object"
        ],
        "summary": "Put Object",
        "description": "Put Object 接口请求可以将本地的文件（Object）上传至指定 Bucket 中。该操作需要请求者对 Bucket 有 WRITE 权限.",
        "operationId": "PutObject",
        "requestBody": {
          "description": "请求的请求体为 Object 文件内容",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "description": "object内容"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Content-Length",
            "description": "RFC 2616 中定义的 HTTP 请求内容长度（字节)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Content-Disposition",
            "description": "RFC 2616 中定义的文件名称，将作为 Object 元数据保存",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Content-Encoding",
            "description": "RFC 2616 中定义的编码格式，将作为 Object 元数据保存",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "RFC 2616 中定义的内容类型（MIME），将作为 Object 元数据保存",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Expect",
            "description": "当使用 Expect: 100-continue 时，在收到服务端确认后，才会发送请求内容",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Expires",
            "description": "RFC 2616 中定义的缓存策略，将作为 Object 元数据保存",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "x-cos-meta-*",
            "description": "允许用户自定义的头部信息，将作为 Object 元数据返回。大小限制 2K",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "x-cos-storage-class",
            "description": "设置 Object 的存储级别，枚举值：STANDARD，STANDARD_IA，NEARLINE，默认值：STANDARD",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "STANDARD",
                "STANDARD_IA",
                "NEARLINE"
              ]
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Content-MD5",
            "description": "RFC 1864 中定义对消息内容（不包括头部）计算 MD5 值获得 128 比特位数字，对该数字进行 base64 编码为一个消息的 Content-MD5 值。该请求头可用于检查数据是否与发送时一致。虽然该请求头是可选的，但我们建议使用该请求头进行端到端检查",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "x-cos-acl",
            "description": "定义 Object 的 ACL 属性。有效值：private，public-read-write，public-read；默认值：private",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "public-read",
                "private",
                "public-read-write"
              ]
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "x-cos-grant-read",
            "description": "赋予被授权者读的权限。格式：x-cos-grant-read: id=\" \",id=\" \"",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "x-cos-grant-write",
            "description": "赋予被授权者读写权限。格式：x-cos-grant-full-control: id=\" \",id=\" \"",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "x-cos-acl",
            "description": "定义 Object 的 ACL 属性。有效值：private，public-read-write，public-read；默认值：private",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "error_code" : "None",
            "description": "上传成功,响应体返回为空",
            "headers": {
              "ETag": {
                "description": "上传文件内容的MD5值",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400-0": {
            "error_code" : "InvalidURI",
            "description": "对象 key 长度限制为 850，如果超过 850 会返回该错误",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400-1": {
            "error_code" : "EntityTooLarge",
            "description": "如果添加的文件长度超过5G，会返回该错误",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400-2": {
            "error_code" : "InvalidDigest",
            "description": "如果用户上传文件时携带 Content-MD5 头部，COS 会校验 body 的 Md5 和用户携带的 MD5 是否一致，如果不一致将返回该错误",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400-3": {
            "error_code" : "KeyTooLong",
            "description": "上传文件时携带的以x-cos-meta开头的自定义头部，每个自定义头部的key和value加起来不能超过4k，否则返回该错误",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "error_code" : "SignatureDoesNotMatch",
            "description": "提供的签名不符合规则，返回该错误码",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                  "description": "错误码用来定位唯一的错误条件，用来确定错误场景，具体错误码见下文"
                }
              }
            }
          },
          "404": {
            "error_code" : "NoSuchBucket",
            "description": "如果试图添加的 Object 所在的 Bucket 不存在，返回该错误码",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "411": {
            "error_code" : "MissingContentLength",
            "description": "如果上传文件时，没有添加 Content-Length 头部，会返回该错误码",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "object"
        ],
        "summary": "Get Object",
        "description": "Get Object 接口请求可以在 COS 的 Bucket 中将一个文件（Object）下载至本地。该操作需要请求者对 Bucket 有 READ 权限.",
        "operationId": "GetObject",
        "parameters": [
          {
            "in": "query",
            "name": "response-content-type",
            "description": "设置响应头部中的 Content-Type 参数",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ContentType"
            }
          },
          {
            "in": "query",
            "name": "response-content-language",
            "description": "设置响应头部中的 Content-Language 参数",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ContentLanguage"
            }
          },
          {
            "in": "query",
            "name": "response-expires",
            "description": "设置响应头部中的 Content-Expires 参数",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ResponseExpires"
            }
          },
          {
            "in": "query",
            "name": "response-cache-control",
            "description": "设置响应头部中的 Cache-Control 参数",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ResponseCacheControl"
            }
          },
          {
            "in": "query",
            "name": "response-content-disposition",
            "description": "设置响应头部中的 Content-Disposition 参数",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ResponseContentDisposition"
            }
          },
          {
            "in": "query",
            "name": "response-content-encoding",
            "description": "设置响应头部中的 Content-Encoding 参数",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ResponseContentEncoding"
            }
          },
          {
            "in": "header",
            "name": "Range",
            "description": "RFC 2616 中定义的指定文件下载范围，以字节（bytes）为单位",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "If-Unmodified-Since",
            "description": "如果文件修改时间早于或等于指定时间，才返回文件内容。否则返回 412 (precondition failed)",
            "required": false,
            "schema": {
              "type": "string",
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "If-Modified-Since",
            "description": "当 Object 在指定时间后被修改，则返回对应 Object meta 信息，否则返回 304(not modified)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "当 ETag 与指定的内容一致，才返回文件。否则返回 412 (precondition failed)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "当 ETag 与指定的内容不一致，才返回文件。否则返回 304 (not modified)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "error_code" : "None",
            "description": "下载成功，文件内容在响应体中",
            "headers": {
              "x-cos-meta- *": {
                "description": "用户自定义的元数据",
                "schema": {
                  "type": "string"
                }
              },
              "x-cos-object-type": {
                "description": "用来表示 object 是否可以被追加上传，枚举值：normal 或者 appendable",
                "schema": {
                  "type": "string"
                }
              },
              "x-cos-storage-class": {
                "description": "Object 的存储级别，枚举值：STANDARD，STANDARD_IA，NEARLINE",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "description": "下载文件的内容",
                  "example": 123
                }
              }
            }
          },
          "400": {
            "error_code" : "InvalidArgument",
            "description": "提供的参数错误",
            "content": {
              "application-xml": {
                "schema": {       
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "error_code" : "SignatureDoesNotMatch",
            "description": "提供的签名不符合规则，返回该错误码",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                }
              }
            }
          },
          "404": {
            "error_code" : "NoSuchKey",
            "description": "如果下载的文件不存在，返回该错误码",
            "content": {
              "application-xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      } 
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "错误码用来定位唯一的错误条件，用来确定错误场景，具体错误码见下文"
          },
          "Message": {
            "type": "string",
            "description": "包含具体的错误信息"
          },
          "Resource": {
            "type": "string",
            "description": "资源地址：Bucket地址或者Object地址"
          },
          "RequestId": {
            "type": "string",
            "description": "当请求发送时，服务端将会自动为请求生成一个唯一的 ID。使用遇到问题时，request-id能更快地协助 COS 定位问题"
          },
          "TraceId": {
            "type": "string",
            "description": "当请求出错时，服务端将会自动为这个错误生成一个唯一的 ID。使用遇到问题时，trace-id能更快地协助 COS 定位问题。当请求出错时，trace-id与request-id唯一对应"
          }
        }
      },
      "ListBucketResult": {
        "type": "object",
        "description": "保存 Get Bucket 请求结果的所有信息",
        "properties": {
          "Name": {
            "type": "string",
            "description": "说明 Bucket 的信息"
          },
          "Encoding-Type": {
            "type": "string",
            "description": "编码格式"
          },
          "Prefix": {
            "type": "string",
            "description": "前缀匹配，用来规定响应请求返回的文件前缀地址"
          },
          "Marker": {
            "type": "string",
            "description": "默认以 UTF-8 二进制顺序列出条目，所有列出条目从 marker 开始"
          },
          "MaxKeys": {
            "type": "string",
            "description": "单次响应请求内返回结果的最大的条目数量"
          },
          "IsTruncated": {
            "type": "boolean",
            "description": "响应请求条目是否被截断，布尔值：true，false"
          },
          "NextMarker": {
            "type": "string",
            "description": "假如返回条目被截断，则返回 NextMarker 就是下一个条目的起点"
          },
          "Contents": {
            "type": "object",
            "description": "元数据信息",
            "properties": {
              "Key": {
                "type": "string",
                "description": "Object 的 Key"
              },
              "LastModified": {
                "type": "string",
                "description": "说明 Object 最后被修改时间"
              },
              "ETag": {
                "type": "string",
                "description": "文件的 MD-5 算法校验值"
              },
              "Size": {
                "type": "string",
                "description": "说明文件大小，单位是 Byte"
              },
              "Owner": {
                "type": "object",
                "description": "Bucket 持有者信息",
                "properties": {
                  "ID": {
                    "type": "string",
                    "description": "Bucket 的 AppID"
                  }                  
                }
              },
              "StorageClass": {
                "type": "string",
                "description": "Object 的存储级别，枚举值：STANDARD，STANDARD_IA，NEARLINE"
              },
            }
          },
          "CommonPrefixes": {
            "type": "object",
            "description": "将 Prefix 到 delimiter 之间的相同路径归为一类，定义为 Common Prefix",
            "properties": {
              "Prefix": {
                "type": "string",
                "description": "单条 Common 的前缀"
              }
            }
          },
        }
      },
      "BucketCorsRequest": {
        "type": "object",
        "description": "设置 Bucket 的跨域资源共享权限",
        "properties": {
          "CORSConfiguration": {
            "type": "object",
            "description": "说明跨域资源共享配置的所有信息，最多可以包含100条 CORSRule",
            "properties": {
              "CORSRule": {
                "type": "object",
                "description": "说明跨域资源共享配置的所有信息，最多可以包含100条 CORSRule",
                "properties": {
                  "ID": {
                    "type": "string",
                    "description": "配置规则的 ID，可选填"
                  },
                  "AllowedOrigin": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "允许的访问来源，支持通配符 * 格式为：协议://域名[:端口]如：http://www.qq.com"
                  },
                  "AllowedMethod": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "允许的 HTTP 操作，枚举值：GET，PUT，HEAD，POST，DELETE"
                  },
                  "AllowedHeader": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "在发送 OPTIONS 请求时告知服务端，接下来的请求可以使用哪些自定义的 HTTP 请求头部，支持通配符 *"
                  },
                  "MaxAgeSeconds": {
                    "type": "integer",
                    "description": "设置 OPTIONS 请求得到结果的有效期"
                  },
                  "ExposeHeader": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "设置浏览器可以接收到的来自服务器端的自定义头部信息"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}